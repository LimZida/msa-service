<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">
    <!-- 로그 패턴에 색상 적용 %clr(pattern){color} -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />

    <!-- 로그 출력 패턴 -->
    <property name="LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss}:%-3relative] [%thread]  %clr(%-5level) %clr(${PID:-}){magenta} %clr(%-40.40logger{36}){cyan} %clr(:){faint} %msg%n"/>
    <!-- 로그 저장 패턴 -->
    <property name="LOG_SAVE_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-4relative ---[%thread] %logger{35} - %msg%n"/>


    <!-- 로그 파일이 저장될 경로 -->
    <property name="LOG_PATH" value="C:/workspace/SMART_HOME/logs"/>

    <!-- 로그 파일 이름 -->
    <property name="LOG_FILE_NAME" value="gpt_log"/>


    <!-- 로그 레벨 -->
    <!--
    	1) ERROR : 오류 메시지 표시
        2) WARN  : 경고성 메시지 표시
        3) INFO  : 정보성 메시지 표시
        4) DEBUG : 디버깅하기 위한 메시지 표시
        5) TRACE :  Debug보다 훨씬 상세한 메시지 표시

        아래에서는 info로 설정하였는데, 이 경우엔 INFO 보다 위에 있는 DEBUG와 TRACE는 표시하지 않는다.
    -->
    <property name="LOG_LEVEL" value="INFO"/>

    <!-- CONSOLE에 로그 출력 세팅 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                ${LOG_PATTERN}
            </Pattern>
        </layout>
    </appender>

    <!-- File에 로그 출력 세팅 -->
<!--    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 파일 경로 설정 &ndash;&gt;-->
<!--        <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>-->

<!--        &lt;!&ndash; 출력패턴 설정&ndash;&gt;-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${LOG_SAVE_PATTERN}</pattern>-->
<!--        </encoder>-->

<!--        &lt;!&ndash; Rolling 정책 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 &ndash;&gt;-->
<!--            &lt;!&ndash; ex)  C:/workspace/SMART_HOME/IrisEnvironment/logs/2024-08-12/iris_portal.log.zip         &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/${LOG_FILE_NAME}.log.zip</fileNamePattern>-->
<!--            &lt;!&ndash; 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거&ndash;&gt;-->
<!--            <maxHistory>365</maxHistory>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

    <!-- 로그 전역 세팅 -->
    <root level="${LOG_LEVEL}">
        <!-- 위에 설정한 콘솔 설정 추가 -->
        <appender-ref ref="CONSOLE"/>
        <!-- 위에 설정한 파일 설정 추가 -->
<!--        <appender-ref ref="FILE"/>-->
    </root>

    <!-- 쿼리설정  -->
    <logger name="jdbc" level="OFF"/>
    <!-- Connection open, close 이벤트에 대한 로그를 출력 -->
    <logger name="jdbc.connection" level="OFF"/>
    <!-- SQL문만을 로그로 출력하며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 출력 -->
    <logger name="jdbc.sqlonly" level="DEBUG"/>
    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 출력 -->
    <logger name="jdbc.sqltiming" level="OFF"/>
    <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 출력-->
    <logger name="jdbc.audit" level="OFF"/>
    <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 출력 -->
     <logger name="jdbc.resultset" level="OFF"/>
     <!-- SQL 결과 조회된 데이터의 table을 로그로 출력 -->
     <logger name="jdbc.resultsettable" level="DEBUG"/>

</configuration>